kind: pipeline
type: docker
name: build

workspace:
  path: /drone/src

volumes: # 声明数据卷
# - name: site-packages                   #python依赖包宿主机目录
#   host:  
#     path: /volumes/drone/site-packages/ 
- name: node_modules                    #vue依赖包宿主机目录
  host: 
    path: /volumes/drone/node_modules  
- name: fronted_build                   #vue宿主机构建路径
  host:
    path: /volumes/drone/fronted_build  
- name: backend_build                   #挂载源代码路径
  host:
    path: /volumes/drone/backend_build
clone:
  disable: false # 启用拉取

steps:
  - name: build-fronted-dep # 构建前端
    image: node:latest # 使用镜像
    depends_on: [clone] # 依赖的步骤
    volumes: # 挂载数据卷
    - name: node_modules # 数据卷名称
      path: /drone/src/vue-element-admin-new/node_modules # 容器内目录 绝对路径
    - name: fronted_build
      path: /fronted_build
    commands: # 执行命令
      - cd /drone/src/vue-element-admin-new/ #
      - npm config set registry https://registry.npm.taobao.org # 切换淘宝镜像
      - git config --global http.sslverify "false"
      - git config --global url."https://github.com/".insteadOf "ssh://git@github.com/"
      - npm install # 安装node_modules包
      - export NODE_OPTIONS=--openssl-legacy-provider
      - npm cache clean --force
      - npm run build:stage # 执行编译   
      - echo ====复制前端静态资源=======
      - rm -rf /fronted_build/dist/
      - cp -af /drone/src/vue-element-admin-new/dist/ /fronted_build/dist/ -r

  - name: build-backend-dep  #安装后端依赖
    image: python:3.9
    depends_on: [build-fronted-dep]
    volumes: #挂载数据卷
    # - name: site-packages
    #   path: /usr/local/lib/python3.9/site-packages/
    - name: backend_build
      path: /backend_build
    commands: # 执行命令
      # - python -m ensurepip
      # - pip install easy_install 
      # - python -m pip install --upgrade pip
      # - cd /drone/src/myproject/
      # - python -m pip install -r requirements.txt
      - echo ====复制后端源码=======
      - cp -af /drone/src/compose /backend_build -r
      - cp -af /drone/src/myproject /backend_build -r
      - cp -af /drone/src/docker-compose.yml /backend_build -r

  - name: deploy-project
    image: appleboy/drone-ssh
    depends_on: [build-backend-dep]
    settings: 
      # 部署主机的IP  
      host: 121.4.54.4
      # 部署主机的登录账号，需从Drone中获取密钥名ssh_user的值，创建方式见下面
      username:
        from_secret: ssh_user
      # 部署主机的登录密码，需从Drone中获取密钥名ssh_pwd的值，创建方式见下面
      password:
        from_secret: ssh_pwd
      # 端口号
      port: 22
      # 设置超时
      command_timeout: 30m
      # 编写脚本，可根据具体情况编写
      depends_on:
        - drone/git
      script:
        - echo ====开始部署=======
        - echo ====重新构建镜像=======
        - cd /volumes/drone/backend_build
        - docker-compose stop
        - docker-compose build
        - echo ====重新启动容器=======
        - docker-compose up -d
        - echo ====删除所有为None的镜像=======
        - docker rmi $(docker images -f "dangling=true" -q)
        - echo ====清除日志/无用镜像、容器、卷======
        - cat /dev/null > *-json.log
        - docker system prune -f
        - echo =======部署结束=======